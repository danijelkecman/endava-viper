//
//  NewsFeedListInteractor.swift
//  EndavaTest
//
//  Created by Danijel Kecman on 8/3/17.
//  Copyright (c) 2017 Danijel Kecman. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation
import Alamofire
import SwiftyJSON

final class NewsFeedListInteractor {
}

// MARK: - Extensions -

extension NewsFeedListInteractor: NewsFeedListInteractorInterface {
    func getData(completion: ([String]) -> Void) {
        let data = ["thoughtful", "trusted", "open", "smart", "adaptable", "agile", "neat", "careful"]
        completion(data)
    }
    
    func getNewsFeedListFrom(source: String, completion: @escaping ([Article]) -> Void) {
        SessionManager.default.request(Router.newsList(source: source)).responseData { response in
            if response.error != nil {
                print(response.error!.localizedDescription)
                return
            }
            let json = JSON(data: response.data!)
            let articlesJson = json["articles"]
            var articles = [Article]()
            for (_, articleJson) in articlesJson {
                let article = Article(author: articleJson["author"].string!,
                                      title: articleJson["title"].string!,
                                      description: articleJson["description"].string!,
                                      url: articleJson["url"].string!,
                                      imageUrl: articleJson["urlToImage"].string!,
                                      publishedAt: articleJson["publishedAt"].string!)
                articles.append(article)
            }
            completion(articles)
        }

    }
}
